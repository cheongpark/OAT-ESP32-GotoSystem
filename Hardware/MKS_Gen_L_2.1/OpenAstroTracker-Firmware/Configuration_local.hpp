/////////////////////////////////////////////////////////////////////////////////////////////////////////
// This configuration file was generated by the OAT/OAM Configurator at https://config.openastrotech.com
// and is for firmware to be used on a OpenAstroTracker.
// Save this as Configuration_local.hpp in the folder where you placed the firmware code.
/////////////////////////////////////////////////////////////////////////////////////////////////////////
// Unique ConfigKey: TR:OAT,FWT:L,SL:N,HS:N,BD:M21,RST:N9,RDO:TU,RATP900:O90:A3000:V1800:S32:T256:,RTR:Y,RT:1,DS:N9,DDT:TU,DATP900:O90:A3000:V1800:S32:T256:,DT:1,DLIN90:D45:,STL:S,DY:LCD,GP:N,LM:N,FC:N,APT:Y,AV:2,ZST:N8,ZD:TU,ZAP900:O90:S16:H10:,ZAO:Y,LST:N8,LD:TU,LAP900:O90:S16:H10:,LAO:Y,RAH:N
/////////////////////////////////////////////////////////////////////////////////////////////////////////


// Use the much higher performance stepper library.
#define NEW_STEPPER_LIB

// We live in the Northern Hemisphere
#define NORTHERN_HEMISPHERE 1

// We are using the MKS GEN L V2.1 board
#if defined(BOARD) && BOARD != BOARD_AVR_MKS_GEN_L_V21
    #error Selected PIO environment does not match this configuration
#else
    #define BOARD BOARD_AVR_MKS_GEN_L_V21
#endif

////////////////////////////////
// RA Stepper configuration (OAT)
// See supported stepper values. Change according to the steppers you are using
// Using the NEMA 17, 0.9°/step stepper for RA
#define RA_STEPPER_TYPE STEPPER_TYPE_ENABLED

// Using the TMC2209-UART driver for RA stepper motor
#define RA_DRIVER_TYPE DRIVER_TYPE_TMC2209_UART

// Define some RA stepper motor settings
#define RA_MOTOR_CURRENT_RATING        900 // mA
#define RA_OPERATING_CURRENT_SETTING   90 // %
#define RA_STEPPER_ACCELERATION        3000
#define RA_STEPPER_SPEED               1800
#define RA_SLEW_MICROSTEPPING          32
#define RA_TRACKING_MICROSTEPPING      256

// Is it going the wrong way?
#define RA_INVERT_DIR  0

#ifdef NEW_STEPPER_LIB
  #define RA_SLEWING_ACCELERATION_DEG   2.0  // deg/s/s
  #define RA_SLEWING_SPEED_DEG          2.0  // deg/s
#endif

// Track immediately after boot
#define TRACK_ON_BOOT 1

// Define limits for RA... 
#define RA_LIMIT_LEFT     5.5f
#define RA_LIMIT_RIGHT    6.5f
#define RA_TRACKING_LIMIT 6.75f // can't quite get to 7h...

// Using the 16 tooth gear (recommended) for RA belt
#define RA_PULLEY_TEETH 16

////////////////////////////////
// DEC Stepper configuration 
// See supported stepper values. Change according to the steppers you are using
// Using the NEMA 17, 0.9°/step stepper for DEC
#define DEC_STEPPER_TYPE STEPPER_TYPE_ENABLED

// Using the TMC2209-UART driver for DEC stepper
#define DEC_DRIVER_TYPE DRIVER_TYPE_TMC2209_UART

// Define some DEC stepper motor settings
#define DEC_MOTOR_CURRENT_RATING       900 // mA
#define DEC_OPERATING_CURRENT_SETTING  90 // %
#define DEC_STEPPER_ACCELERATION       3000
#define DEC_STEPPER_SPEED              1800
#define DEC_SLEW_MICROSTEPPING         32
#define DEC_GUIDE_MICROSTEPPING        256

// Is it going the wrong way?
#define DEC_INVERT_DIR  0

#ifdef NEW_STEPPER_LIB
  #define DEC_SLEWING_ACCELERATION_DEG   2.0  // degs/s/s
  #define DEC_SLEWING_SPEED_DEG          2.0  // deg/s
#endif

// Using the 16 tooth gear (recommended) for DEC belt
#define DEC_PULLEY_TEETH 16

// Define DEC limits
#define DEC_LIMIT_UP   90 // degrees from Home
#define DEC_LIMIT_DOWN 45 // degrees from Home

// TMC2209 Stealth Mode (spreadCycle) - When set to 0, tracking is more precise, but noisy (high-pitched hissing sound). When set to 1, they are silent.
#define RA_UART_STEALTH_MODE      1
#define DEC_UART_STEALTH_MODE     1

////////////////////////////////
// Display configuration 
// Define the type of display we are using. Currently: LCD Shield w/ keypad
#define DISPLAY_TYPE DISPLAY_TYPE_LCD_KEYPAD

////////////////////////////////
// GPS Addon configuration 
// Define whether we have the GPS addon or not. Currently: No GPS
#define USE_GPS 0 // ESP32에서 사용할 예정

////////////////////////////////
// Digital Level Addon configuration 
// Define whether we have the Digital Level or not. Currently: No Digital Level
#define USE_GYRO_LEVEL 0 // ESP32에서 사용할 예정

////////////////////////////////
// Focuser configuration 
// Define whether to support a focusing stepper motor on E1 or not. Currently: No Focuser
// No Focuser settings

////////////////////////////////
// Serial ESP32 Control 
// ESP32로 OAT를 컨트롤 할 수 있게 하는걸 켜는 옵션, 0은 끄기, 1은 켜기
// 현재는 USB 시리얼 통신을 이용해서 전송하는데 (GPS나 GYRO는 ESP32에 장착할 것이기 때문에 그 때는 ESP32로 연결되게 해야해서 이 옵션은 남겨두기)
#define USE_ESP32_CONTROL 1

////////////////////////////////
// AutoPA Addon configuration 
// Define whether we have the AutoPA add on or not. Currently: AutoPA is installed

// Using AutoPA V2.0.
#define AUTOPA_VERSION 2

// Using the NEMA 17, 1.8°/step stepper for AZ
#define AZ_STEPPER_TYPE STEPPER_TYPE_ENABLED
#define AZ_STEPPER_SPR 200.0f

// Using the TMC2209-UART driver for AZ stepper motor
#define AZ_DRIVER_TYPE DRIVER_TYPE_TMC2209_UART

// Define AZ stepper motor power settings
#define AZ_MOTOR_CURRENT_RATING      900 // mA
#define AZ_OPERATING_CURRENT_SETTING 90 // %
#define AZ_MICROSTEPPING             16 // steps
#define AZ_MOTOR_HOLD_SETTING        10 // %
#define AZ_STEPPER_SPEED             1000
#define AZ_STEPPER_ACCELERATION      500


///////////////////////////////
// AZ parameters will require tuning according to your setup

// If you have a custom solution involving a rod you can uncomment and use the next 3 lines for calculations
// #define AZ_CIRCUMFERENCE        (115 * 2 * 3.1415927) // the circumference of the circle where the movement is anchored
// #define AZ_ROD_PITCH            1.0f                  // mm per full rev of stepper
// #define AZIMUTH_STEPS_PER_REV   (AZ_CIRCUMFERENCE / AZ_ROD_PITCH * AZ_STEPPER_SPR * AZ_MICROSTEPPING)  // Steps needed to turn AZ 360deg

// If you have a belt drive solution, you can uncomment and use the next 2 lines for calculations
// #define AZ_CIRCUMFERENCE        (725)  // the circumference of the circle where the movement is anchored
// #define AZ_PULLEY_TEETH         16

// Is it going the wrong way?
#define AZ_INVERT_DIR 0

// Define AZ always-on
#define AZ_ALWAYS_ON 1

// Using the NEMA 17, 1.8°/step stepper for ALT
#define ALT_STEPPER_TYPE STEPPER_TYPE_ENABLED
#define ALT_STEPPER_SPR 200.0f

// Using the TMC2209-UART driver for ALT stepper motor
#define ALT_DRIVER_TYPE DRIVER_TYPE_TMC2209_UART

// Define ALT stepper motor power settings
#define ALT_MOTOR_CURRENT_RATING      900 // mA
#define ALT_OPERATING_CURRENT_SETTING 90 // %
#define ALT_MICROSTEPPING             16 // steps
#define ALT_MOTOR_HOLD_SETTING        10 // %
#define ALT_STEPPER_SPEED             2000
#define ALT_STEPPER_ACCELERATION      1000

// Is it going the wrong way?
#define ALT_INVERT_DIR 0

// Define ALT always-on
#define ALT_ALWAYS_ON 1

////////////////////////////////
// Auto Homing addons
#define USE_HALL_SENSOR_RA_AUTOHOME 1
#define USE_HALL_SENSOR_DEC_AUTOHOME 1

///////////////////////
// Debug settings
#define DEBUG_LEVEL (DEBUG_NONE) // 원래는 DEBUG_NONE
